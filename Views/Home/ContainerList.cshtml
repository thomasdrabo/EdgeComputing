@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@model IList<Docker.DotNet.Models.ContainerListResponse>
@{
    ViewData["Title"] = "ContainerList";
    Layout = "../Shared/_Layout.cshtml";
}


@if (SignInManager.IsSignedIn(User))
{
    <h1>Container List</h1>

    <table class="table">
        <thead>
            <tr>
                <th>Image</th>
                <th>Created</th>
                <th>Name</th>
                <th>IP | Private & Public Port | Type</th>
                <th>Status</th>
                <th>Start/Stop</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.Raw(item.Image)
                    </td>
                    <td>
                        @Html.Raw(item.Created)
                    </td>
                    <td>
                        @Html.Raw(item.Names.FirstOrDefault())
                    </td>
                    <td>
                        @foreach (var p in item.Ports)
                        {
                            @Html.Raw(p.IP + " | ")
                            @Html.Raw(p.PrivatePort.ToString() + " | ")
                            @Html.Raw(p.PublicPort.ToString() + " | ")
                            @Html.Raw(p.Type)
                        }
                    </td>
                    <td>
                        @Html.Raw(item.Status)
                    </td>
                    <td>
                        @Html.ActionLink("Stop", "StopContainer", new { containerID = item.ID })'
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <h1>You need to be connected</h1>
}